# SLI/SLO Definitions for Roost-Keeper
# Service Level Indicators and Objectives with error budget configuration

apiVersion: v1
kind: ConfigMap
metadata:
  name: roost-keeper-sli-slo-definitions
  namespace: roost-keeper-system
  labels:
    app.kubernetes.io/name: roost-keeper
    app.kubernetes.io/component: observability
data:
  sli-definitions.yaml: |
    # Service Level Indicators (SLIs)
    # These define how we measure service quality
    slis:
      # Roost Availability SLI
      # Measures the percentage of time roosts are healthy and responding
      roost_availability:
        description: "Percentage of time roosts are in healthy state"
        query: |
          sum(rate(roost_keeper_health_check_success_total[5m])) /
          sum(rate(roost_keeper_health_check_total[5m]))
        unit: "ratio"
        threshold: 0.995  # 99.5% availability target
        
      # Roost Creation Latency SLI  
      # Measures time from roost creation request to ready state
      roost_creation_latency:
        description: "Time from roost creation to ready state (P95)"
        query: |
          histogram_quantile(0.95, 
            sum(rate(roost_keeper_helm_install_duration_seconds_bucket[5m])) by (le)
          )
        unit: "seconds"
        threshold: 30  # 30 seconds target
        
      # Health Check Latency SLI
      # Measures response time of health check operations
      health_check_latency:
        description: "Health check response time (P95)"
        query: |
          histogram_quantile(0.95,
            sum(rate(roost_keeper_health_check_duration_seconds_bucket[5m])) by (le)
          )
        unit: "seconds"  
        threshold: 1  # 1 second target
        
      # Controller Error Rate SLI
      # Measures rate of controller reconciliation errors
      controller_error_rate:
        description: "Rate of controller reconciliation errors"
        query: |
          sum(rate(roost_keeper_reconcile_errors_total[5m])) /
          sum(rate(roost_keeper_reconcile_total[5m]))
        unit: "ratio"
        threshold: 0.01  # 1% error rate target

  slo-definitions.yaml: |
    # Service Level Objectives (SLOs)
    # These define our reliability targets and error budgets
    slos:
      # Availability SLO - 99.5% uptime over 30 days
      roost_availability_slo:
        sli: roost_availability
        objective: 0.995  # 99.5% availability
        window: "30d"
        error_budget: 0.005  # 0.5% error budget
        alerting:
          page: 0.99      # Page if below 99%
          ticket: 0.992   # Ticket if below 99.2%
        burn_rate_alerts:
          fast_burn:      # Fast burn: 2% budget in 1 hour
            window: "1h"
            budget_consumption: 0.02
            severity: "critical"
          slow_burn:      # Slow burn: 10% budget in 6 hours  
            window: "6h"
            budget_consumption: 0.10
            severity: "warning"
        
      # Creation Latency SLO - 95% of creations under 30s over 7 days
      roost_creation_latency_slo:
        sli: roost_creation_latency
        objective: 30     # 30 seconds P95
        window: "7d"
        error_budget: 30  # 30 seconds above target
        alerting:
          page: 60        # Page if above 60s
          ticket: 45      # Ticket if above 45s
        burn_rate_alerts:
          fast_burn:      
            window: "30m"
            budget_consumption: 0.05
            severity: "warning"
          slow_burn:      
            window: "2h" 
            budget_consumption: 0.20
            severity: "info"
        
      # Health Check Latency SLO - 95% under 1s over 7 days
      health_check_latency_slo:
        sli: health_check_latency
        objective: 1      # 1 second P95
        window: "7d"
        error_budget: 4   # 4 seconds above target
        alerting:
          page: 5         # Page if above 5s
          ticket: 2       # Ticket if above 2s
        burn_rate_alerts:
          fast_burn:      
            window: "15m"
            budget_consumption: 0.10
            severity: "warning"
          slow_burn:      
            window: "1h"
            budget_consumption: 0.25
            severity: "info"
        
      # Error Rate SLO - Less than 1% errors over 7 days
      controller_error_rate_slo:
        sli: controller_error_rate
        objective: 0.01   # 1% error rate
        window: "7d"
        error_budget: 0.04 # 4% additional errors allowed
        alerting:
          page: 0.05      # Page if above 5%
          ticket: 0.02    # Ticket if above 2%
        burn_rate_alerts:
          fast_burn:      
            window: "10m"
            budget_consumption: 0.20
            severity: "critical"
          slow_burn:      
            window: "1h"
            budget_consumption: 0.50
            severity: "warning"

  error-budget-policy.yaml: |
    # Error Budget Policy
    # Defines what happens when error budgets are consumed
    error_budget_policy:
      # Policy for availability SLO
      roost_availability_slo:
        burn_rate_thresholds:
          - consumption: 0.02    # 2% budget consumed
            window: "1h"
            action: "page_oncall"
            severity: "critical"
            message: "Availability error budget burning fast - 2% in 1 hour"
          - consumption: 0.05    # 5% budget consumed  
            window: "6h"
            action: "create_ticket"
            severity: "warning"
            message: "Availability error budget elevated consumption"
          - consumption: 0.90    # 90% budget consumed
            window: "30d"
            action: "freeze_deploys"
            severity: "critical"
            message: "Availability error budget nearly exhausted"
            
      # Policy for latency SLOs
      latency_slos:
        burn_rate_thresholds:
          - consumption: 0.10    # 10% budget consumed
            window: "1h" 
            action: "create_ticket"
            severity: "warning"
            message: "Latency SLO degrading"
          - consumption: 0.75    # 75% budget consumed
            window: "7d"
            action: "review_required"
            severity: "warning"
            message: "Latency error budget high consumption"
            
      # Policy for error rate SLO
      controller_error_rate_slo:
        burn_rate_thresholds:
          - consumption: 0.05    # 5% budget consumed
            window: "30m"
            action: "page_oncall"
            severity: "critical" 
            message: "Error rate spiking - immediate attention required"
          - consumption: 0.25    # 25% budget consumed
            window: "2h"
            action: "create_ticket"
            severity: "warning"
            message: "Error rate elevated"
